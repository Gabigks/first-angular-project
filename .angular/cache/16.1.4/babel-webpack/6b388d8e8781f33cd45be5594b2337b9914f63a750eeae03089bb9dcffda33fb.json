{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class CartService {\n  constructor(http) {\n    this.http = http;\n    this.items = [];\n  }\n  addToCart(product) {\n    if (this.items.find(item => item.id === product.id)) {\n      product.count++;\n      return;\n    }\n    product.count++;\n    this.items.push(product);\n  }\n  removeProduct(product) {\n    if (product.count > 1) {\n      product.count--;\n      return this.items;\n    }\n    return this.items = this.items.filter(prod => prod.id !== product.id);\n  }\n  getItems() {\n    return this.items;\n  }\n  clearCart() {\n    this.items = [];\n    return this.items;\n  }\n  getShippingPrices() {\n    return this.http.get('/assets/shipping.json');\n  }\n}\nCartService.ɵfac = function CartService_Factory(t) {\n  return new (t || CartService)(i0.ɵɵinject(i1.HttpClient));\n};\nCartService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: CartService,\n  factory: CartService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["CartService","constructor","http","items","addToCart","product","find","item","id","count","push","removeProduct","filter","prod","getItems","clearCart","getShippingPrices","get","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\User\\Documents\\Github\\angular\\first-angular-project\\src\\app\\cart.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Product } from './products';\nimport { HttpClient } from '@angular/common/http'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CartService {\n\n  items: Product[] = [];\n\n  constructor(\n    private http: HttpClient,\n  ) { }\n\n  addToCart(product: Product): void {\n    if(this.items.find(item => item.id === product.id)) {\n      product.count++;\n      return;\n    }\n    product.count++;\n    this.items.push(product);\n  }\n\n  removeProduct(product: Product): Product[] {\n    if(product.count > 1){\n      product.count--;\n      return this.items;\n    }\n    return this.items = this.items.filter(prod => prod.id !== product.id);\n  }\n\n  getItems(): Product[] {\n    return this.items;\n  }\n\n  clearCart(): Product[] {\n    this.items = [];\n    return this.items;\n  }\n\n  getShippingPrices() {\n    return this.http.get<{type: string, price: number}[]>\n    ('/assets/shipping.json');\n  }\n\n}\n"],"mappings":";;AAOA,OAAM,MAAOA,WAAW;EAItBC,YACUC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAHd,KAAAC,KAAK,GAAc,EAAE;EAIjB;EAEJC,SAASA,CAACC,OAAgB;IACxB,IAAG,IAAI,CAACF,KAAK,CAACG,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAKH,OAAO,CAACG,EAAE,CAAC,EAAE;MAClDH,OAAO,CAACI,KAAK,EAAE;MACf;;IAEFJ,OAAO,CAACI,KAAK,EAAE;IACf,IAAI,CAACN,KAAK,CAACO,IAAI,CAACL,OAAO,CAAC;EAC1B;EAEAM,aAAaA,CAACN,OAAgB;IAC5B,IAAGA,OAAO,CAACI,KAAK,GAAG,CAAC,EAAC;MACnBJ,OAAO,CAACI,KAAK,EAAE;MACf,OAAO,IAAI,CAACN,KAAK;;IAEnB,OAAO,IAAI,CAACA,KAAK,GAAG,IAAI,CAACA,KAAK,CAACS,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACL,EAAE,KAAKH,OAAO,CAACG,EAAE,CAAC;EACvE;EAEAM,QAAQA,CAAA;IACN,OAAO,IAAI,CAACX,KAAK;EACnB;EAEAY,SAASA,CAAA;IACP,IAAI,CAACZ,KAAK,GAAG,EAAE;IACf,OAAO,IAAI,CAACA,KAAK;EACnB;EAEAa,iBAAiBA,CAAA;IACf,OAAO,IAAI,CAACd,IAAI,CAACe,GAAG,CACnB,uBAAuB,CAAC;EAC3B;;AArCWjB,WAAW,C;mBAAXA,WAAW,EAAAkB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAXrB,WAAW,C;SAAXA,WAAW;EAAAsB,OAAA,EAAXtB,WAAW,CAAAuB,IAAA;EAAAC,UAAA,EAFV;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}