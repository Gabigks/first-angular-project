{"ast":null,"code":"import { products } from '../products';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../cart.service\";\nimport * as i3 from \"@angular/common\";\nfunction ProductDetailsComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r2 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"h3\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"h4\");\n    i0.ɵɵtext(4);\n    i0.ɵɵpipe(5, \"currency\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"p\");\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"button\", 1);\n    i0.ɵɵlistener(\"click\", function ProductDetailsComponent_div_2_Template_button_click_8_listener() {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.addToCart(ctx_r1.product));\n    });\n    i0.ɵɵtext(9, \"Buy\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.product.name, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(5, 3, ctx_r0.product.price), \" \");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(ctx_r0.product.description);\n  }\n}\nexport class ProductDetailsComponent {\n  constructor(route, cartService) {\n    this.route = route;\n    this.cartService = cartService;\n  }\n  ngOnInit() {\n    // Primeiro pera o id do produto da rota atual\n    const routeParams = this.route.snapshot.paramMap;\n    /*Os parâmetros de rota correspondem às variáveis de caminho que você define na rota > no app.module\r\n    Para acessar os parâmetros da rota, usamos route.snapshot, que é o ActivatedRouteSnapshot\r\n    que contém informações sobre a rota ativa naquele momento específico. A URL que corresponde à rota fornece o productId, que no caso\r\n    foi definida como variável da rota no app.module, e o Angular usa o productId para exibir os detalhes de cada produto exclusivo.*/\n    const productIdFromRoute = Number(routeParams.get('productId'));\n    // Encontra o produto que corresponde ao id provido da rota\n    this.product = products.find(product => product.id === productIdFromRoute);\n  }\n  addToCart(product) {\n    this.cartService.addToCart(product);\n    window.alert(`${product.name} has been added to cart!`);\n  }\n}\nProductDetailsComponent.ɵfac = function ProductDetailsComponent_Factory(t) {\n  return new (t || ProductDetailsComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.CartService));\n};\nProductDetailsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ProductDetailsComponent,\n  selectors: [[\"app-product-details\"]],\n  decls: 3,\n  vars: 1,\n  consts: [[4, \"ngIf\"], [\"type\", \"button\", 3, \"click\"]],\n  template: function ProductDetailsComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h2\");\n      i0.ɵɵtext(1, \"Product details\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(2, ProductDetailsComponent_div_2_Template, 10, 5, \"div\", 0);\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.product);\n    }\n  },\n  dependencies: [i3.NgIf, i3.CurrencyPipe],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["products","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","ProductDetailsComponent_div_2_Template_button_click_8_listener","ɵɵrestoreView","_r2","ctx_r1","ɵɵnextContext","ɵɵresetView","addToCart","product","ɵɵadvance","ɵɵtextInterpolate1","ctx_r0","name","ɵɵpipeBind1","price","ɵɵtextInterpolate","description","ProductDetailsComponent","constructor","route","cartService","ngOnInit","routeParams","snapshot","paramMap","productIdFromRoute","Number","get","find","id","window","alert","ɵɵdirectiveInject","i1","ActivatedRoute","i2","CartService","selectors","decls","vars","consts","template","ProductDetailsComponent_Template","rf","ctx","ɵɵtemplate","ProductDetailsComponent_div_2_Template","ɵɵproperty"],"sources":["C:\\Users\\User\\Documents\\Github\\angular\\first-angular-project\\src\\app\\product-details\\product-details.component.ts","C:\\Users\\User\\Documents\\Github\\angular\\first-angular-project\\src\\app\\product-details\\product-details.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Product, products } from '../products';\nimport { ActivatedRoute } from '@angular/router';\nimport { CartService } from '../cart.service';\n\n@Component({\n  selector: 'app-product-details',\n  templateUrl: './product-details.component.html',\n  styleUrls: ['./product-details.component.css']\n})\nexport class ProductDetailsComponent implements OnInit {\n  product: Product | undefined;\n\n  constructor(\n    private route: ActivatedRoute,\n    private cartService: CartService,\n    ){ }\n\n  ngOnInit(): void {\n    // Primeiro pera o id do produto da rota atual\n    const routeParams = this.route.snapshot.paramMap;\n    /*Os parâmetros de rota correspondem às variáveis de caminho que você define na rota > no app.module\n    Para acessar os parâmetros da rota, usamos route.snapshot, que é o ActivatedRouteSnapshot \n    que contém informações sobre a rota ativa naquele momento específico. A URL que corresponde à rota fornece o productId, que no caso\n    foi definida como variável da rota no app.module, e o Angular usa o productId para exibir os detalhes de cada produto exclusivo.*/\n    const productIdFromRoute = Number(routeParams.get('productId'));\n\n    // Encontra o produto que corresponde ao id provido da rota\n    this.product = products.find(product => product.id === productIdFromRoute)\n  }\n\n  addToCart(product: Product): void{\n    this.cartService.addToCart(product);\n    window.alert(`${product.name} has been added to cart!`);\n  }\n}\n","<h2>Product details</h2>\n\n<div *ngIf=\"product\">\n  <h3> {{product.name}} </h3>\n  <h4> {{product.price | currency }} </h4>\n  <p>{{product.description}}</p>\n  <button type=\"button\" (click)=\"addToCart(product)\">Buy</button>\n</div>"],"mappings":"AACA,SAAkBA,QAAQ,QAAQ,aAAa;;;;;;;;ICC/CC,EAAA,CAAAC,cAAA,UAAqB;IACdD,EAAA,CAAAE,MAAA,GAAiB;IAAAF,EAAA,CAAAG,YAAA,EAAK;IAC3BH,EAAA,CAAAC,cAAA,SAAI;IAACD,EAAA,CAAAE,MAAA,GAA8B;;IAAAF,EAAA,CAAAG,YAAA,EAAK;IACxCH,EAAA,CAAAC,cAAA,QAAG;IAAAD,EAAA,CAAAE,MAAA,GAAuB;IAAAF,EAAA,CAAAG,YAAA,EAAI;IAC9BH,EAAA,CAAAC,cAAA,gBAAmD;IAA7BD,EAAA,CAAAI,UAAA,mBAAAC,+DAAA;MAAAL,EAAA,CAAAM,aAAA,CAAAC,GAAA;MAAA,MAAAC,MAAA,GAAAR,EAAA,CAAAS,aAAA;MAAA,OAAST,EAAA,CAAAU,WAAA,CAAAF,MAAA,CAAAG,SAAA,CAAAH,MAAA,CAAAI,OAAA,CAAkB;IAAA,EAAC;IAACZ,EAAA,CAAAE,MAAA,UAAG;IAAAF,EAAA,CAAAG,YAAA,EAAS;;;;IAH1DH,EAAA,CAAAa,SAAA,GAAiB;IAAjBb,EAAA,CAAAc,kBAAA,MAAAC,MAAA,CAAAH,OAAA,CAAAI,IAAA,MAAiB;IACjBhB,EAAA,CAAAa,SAAA,GAA8B;IAA9Bb,EAAA,CAAAc,kBAAA,MAAAd,EAAA,CAAAiB,WAAA,OAAAF,MAAA,CAAAH,OAAA,CAAAM,KAAA,OAA8B;IAChClB,EAAA,CAAAa,SAAA,GAAuB;IAAvBb,EAAA,CAAAmB,iBAAA,CAAAJ,MAAA,CAAAH,OAAA,CAAAQ,WAAA,CAAuB;;;ADK5B,OAAM,MAAOC,uBAAuB;EAGlCC,YACUC,KAAqB,EACrBC,WAAwB;IADxB,KAAAD,KAAK,GAALA,KAAK;IACL,KAAAC,WAAW,GAAXA,WAAW;EAChB;EAELC,QAAQA,CAAA;IACN;IACA,MAAMC,WAAW,GAAG,IAAI,CAACH,KAAK,CAACI,QAAQ,CAACC,QAAQ;IAChD;;;;IAIA,MAAMC,kBAAkB,GAAGC,MAAM,CAACJ,WAAW,CAACK,GAAG,CAAC,WAAW,CAAC,CAAC;IAE/D;IACA,IAAI,CAACnB,OAAO,GAAGb,QAAQ,CAACiC,IAAI,CAACpB,OAAO,IAAIA,OAAO,CAACqB,EAAE,KAAKJ,kBAAkB,CAAC;EAC5E;EAEAlB,SAASA,CAACC,OAAgB;IACxB,IAAI,CAACY,WAAW,CAACb,SAAS,CAACC,OAAO,CAAC;IACnCsB,MAAM,CAACC,KAAK,CAAC,GAAGvB,OAAO,CAACI,IAAI,0BAA0B,CAAC;EACzD;;AAxBWK,uBAAuB,C;mBAAvBA,uBAAuB,EAAArB,EAAA,CAAAoC,iBAAA,CAAAC,EAAA,CAAAC,cAAA,GAAAtC,EAAA,CAAAoC,iBAAA,CAAAG,EAAA,CAAAC,WAAA;AAAA;AAAvBnB,uBAAuB,C;QAAvBA,uBAAuB;EAAAoB,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,iCAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCVpC/C,EAAA,CAAAC,cAAA,SAAI;MAAAD,EAAA,CAAAE,MAAA,sBAAe;MAAAF,EAAA,CAAAG,YAAA,EAAK;MAExBH,EAAA,CAAAiD,UAAA,IAAAC,sCAAA,kBAKM;;;MALAlD,EAAA,CAAAa,SAAA,GAAa;MAAbb,EAAA,CAAAmD,UAAA,SAAAH,GAAA,CAAApC,OAAA,CAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}